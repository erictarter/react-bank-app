{"ast":null,"code":"import _slicedToArray from \"/Users/erictarter/Desktop/my-apps/react-bank-UI/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/erictarter/Desktop/my-apps/react-bank-UI/client/src/context/accountState.js\";\nimport React, { useState } from 'react';\nimport AccountContext from './accountContext';\n\nconst random = (max = 0, min = 0) => {\n  return Math.random() * (max - min) + min;\n};\n\nconst totalBalance = Math.round(random(10000));\n\nconst checkings = (max = 0, min = 0) => {\n  return Math.random() * (max - min) + min;\n};\n\nconst savings = (max = 0, min = 0) => {\n  return Math.random() * (max - min) + min;\n};\n\nconst total = Math.round(checkings(10000)) + Math.round(savings(10000));\n\nconst AccountState = props => {\n  const _useState = useState({\n    total: totalBalance\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        balance = _useState2[0],\n        setBalance = _useState2[1];\n\n  return React.createElement(AccountContext.Provider, {\n    value: {\n      balance,\n      setBalance\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, props.children);\n};\n\nexport default AccountState;","map":{"version":3,"sources":["/Users/erictarter/Desktop/my-apps/react-bank-UI/client/src/context/accountState.js"],"names":["React","useState","AccountContext","random","max","min","Math","totalBalance","round","checkings","savings","total","AccountState","props","balance","setBalance","children"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,cAAP,MAA2B,kBAA3B;;AAEA,MAAMC,MAAM,GAAG,CAACC,GAAG,GAAG,CAAP,EAAUC,GAAG,GAAG,CAAhB,KAAsB;AACnC,SAAOC,IAAI,CAACH,MAAL,MAAiBC,GAAG,GAAGC,GAAvB,IAA8BA,GAArC;AACD,CAFD;;AAIA,MAAME,YAAY,GAAGD,IAAI,CAACE,KAAL,CAAWL,MAAM,CAAC,KAAD,CAAjB,CAArB;;AAEA,MAAMM,SAAS,GAAG,CAACL,GAAG,GAAG,CAAP,EAAUC,GAAG,GAAG,CAAhB,KAAsB;AACtC,SAAOC,IAAI,CAACH,MAAL,MAAiBC,GAAG,GAAGC,GAAvB,IAA8BA,GAArC;AACD,CAFD;;AAIA,MAAMK,OAAO,GAAG,CAACN,GAAG,GAAG,CAAP,EAAUC,GAAG,GAAG,CAAhB,KAAsB;AACpC,SAAOC,IAAI,CAACH,MAAL,MAAiBC,GAAG,GAAGC,GAAvB,IAA8BA,GAArC;AACD,CAFD;;AAIA,MAAMM,KAAK,GAAGL,IAAI,CAACE,KAAL,CAAWC,SAAS,CAAC,KAAD,CAApB,IAA+BH,IAAI,CAACE,KAAL,CAAWE,OAAO,CAAC,KAAD,CAAlB,CAA7C;;AAEA,MAAME,YAAY,GAAGC,KAAK,IAAI;AAAA,oBACEZ,QAAQ,CAAC;AACrCU,IAAAA,KAAK,EAAEJ;AAD8B,GAAD,CADV;AAAA;AAAA,QACrBO,OADqB;AAAA,QACZC,UADY;;AAK5B,SACE,oBAAC,cAAD,CAAgB,QAAhB;AAAyB,IAAA,KAAK,EAAE;AAAED,MAAAA,OAAF;AAAWC,MAAAA;AAAX,KAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,KAAK,CAACG,QADT,CADF;AAKD,CAVD;;AAYA,eAAeJ,YAAf","sourcesContent":["import React, { useState } from 'react';\nimport AccountContext from './accountContext';\n\nconst random = (max = 0, min = 0) => {\n  return Math.random() * (max - min) + min;\n};\n\nconst totalBalance = Math.round(random(10000));\n\nconst checkings = (max = 0, min = 0) => {\n  return Math.random() * (max - min) + min;\n};\n\nconst savings = (max = 0, min = 0) => {\n  return Math.random() * (max - min) + min;\n};\n\nconst total = Math.round(checkings(10000)) + Math.round(savings(10000));\n\nconst AccountState = props => {\n  const [balance, setBalance] = useState({\n    total: totalBalance\n  });\n\n  return (\n    <AccountContext.Provider value={{ balance, setBalance }}>\n      {props.children}\n    </AccountContext.Provider>\n  );\n};\n\nexport default AccountState;\n"]},"metadata":{},"sourceType":"module"}